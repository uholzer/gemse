<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html [
  <!ENTITY  enter  "‚Üµ">
  <!ENTITY  esc    "ESC">
  <!ENTITY  ctrl   "CRTL+">
  <!ENTITY  alt    "ALT+">
  <!ENTITY  space  "‚ê£">
]>

<html
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:internal="http://www.andonyar.com/rec/2008-12/gemse/internalns"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xml:lang="en"
    internal:function="documentation"
>

<head>
    <title>Gemse Base</title>
    <link rel="stylesheet" href="../gemse.css" type="text/css" />
</head>

<body>

<h1>Gemse Base</h1>

<h2>Accessibility</h2>

<p>First, Gemse is only useful to people who can see. On the other
hand, I want that also people can use Gemse who can see something but still are
visually impaired, for example because of color blindness. The
solution is to provide different stylesheets. In the future their will
be a monochrome stylesheet and perhaps also a black/white one.</p>

<p>Persons who have problems using a keyboard can perhaps still use
gemse. The names of the commands can be adapted. The requirement is
that the user can insert unicode characters in some way. However,
Gemse can not be used with a pointing device. (Except if you use the
pointing device to stear an on-screen keyboard which generates unicode
input for Gemse.)</p>

<div id="doc.base.input">
<h2>Input</h2>

<p>Somehow you must be able to insert all the unicode characters you
need. For example, if you need a ‚àÄ in a formula, you must be able to
insert it. There are several ways to do that. If your keyboard has a
key for the character you need and you have configured your opperating
system correctly, you only need to press the key, of course. But what
to do if you do not have such a key? There are at least three ways:</p>

<h3>Copy and paste</h3>

<p>One way is to copy the character from somewhere else and then paste
it into the input box. But I am sure, nobody wants to do that.</p>

<h3>Input methods from the operating system</h3>

<p>The best and recommended way is to configure your operating system
so it allows you to input such characters by hitting a sequence of
keys. For example if you hit <kbd>\forall</kbd> it inserts ‚àÄ .
I do not know about Windows or Mac, but for
Linux, I can provide 
<a href="http://www.andonyar.com/rec/2008-03/mathinput/">one way to do
that</a>.
</p>

<h3>Gemse's input substitution</h3>

<p>There is another way implemented
in Gemse directly. To use it, you have first to activate it. Open the
file <code>editor.xhtml</code> and watch out for the line containing
<code><![CDATA[<script src="inputSubstitutionTable.js"/>]]></code>. If it is
commented out, i.e. if it is surrounded by <code>&lt;!--</code> and
<code>--&gt;</code>, you must remove those comment signs. It may be
that the comment signs are not there from the beginning. The first
line below shows how it may look like and the second one how it has to
look like afterwards:</p>

<pre><![CDATA[<!-- <script src="inputSubstitutionTable.js"/> -->]]></pre>
<pre><![CDATA[<script src="inputSubstitutionTable.js"/>]]></pre>

<p>Save the file and open <code>inputSubstitutionTable.js</code>. At
the beginning of the file, set <code>inputSubstitutionActive</code>
to true if it not already is. This means that you must replace
<code>inputSubstitutionActive = false;</code> with
<code>inputSubstitutionActive = true;</code>. Now you are ready to use
the input substitution feature of Gemse.</p>

<p>If you want a character that you can not enter directly, enter
<kbd>\u+</kbd> followed by the codepoint of the unicode character
you want, written in hex notation using four characters. If you need a
character of a higher plane, use <kbd>\U+</kbd> followed by the
codepoint written in hex using eight characters. So, for example if
you need ‚àÄ, enter <kbd>\u+2200</kbd>. If it works, you can see that
it gets replaced immediately. If you need an <code>ùïä</code> 
(a double struck S), enter
<kbd>\U+0001d54a</kbd>. However that's not all. In the file
<code>inputSubstitutionTable.js</code> you can give names to
characters. The variable <code>inputSubstitutionTable</code> maps names to unicode
characters. This allows you for example to write <kbd>\forall</kbd>
in order to get a ‚àÄ. But for that you have to add an entry to the
<code>inputSubstitutionTable</code> which looks like 
<code>"forall": "‚àÄ",</code>. (Gemse does not ship with a full
inputSubstitutionTable, you have to add the characters you need
on your own.)</p>

</div>

<h2>Installation</h2>

<p>Gemse requires Mozilla. That means, you either need Firefox 3 or
you have to use XULRunner. Unfortunately, Gemse is not yet prepared
for XULRunner, but I believe it is easy to do that.</p>

<p>You can run the demo of Gemse directly from its website using
Firefox 3. Also, you can download the package, unpack it into some
directory and open the file <code>editor.xhtml</code> in Firefox 3.
Both variants have the drawback that Gemse will run with restricted
permissions. This mainly means that you are unable to use the save and
load functions.</p>

<p>You can also put Gemse into the chrome of your Firefox. Put in the
chrome directory a file named <code>gemse.manifest</code> containing</p>

<pre>content gemse file:///home/urs/p/gemse/approach1/ contentaccessible=yes</pre>

<p>Of course, you have to replace <code>file:///home/urs/p/gemse/approach1/</code>
with the name of the directory where you unpacked the Gemse package. I
unpacked it somewhere in my home directory, but of course, you can
also unpack it somewhere in the chrome directory. Then you can enter
<code>chrome://gemse/content/editor.xhtml</code> in the adress bar of
Firefox and the editor opens up with the full privileges. You will now
be able to load and save files where you want. <em>Be aware that you
should not put untrusted code into the chrome of your browser. Also
note that Gemse's code is very young and not well tested and as such
might do damage, especially if you use the save command not
carefully. (For example, it does not ask before overwriting existing
files.)</em></p>

<p>However, by installing Gemse into the chrome, you can enable a
powerful feature: Gemse provides a (so called) overlay for Firefox. It
adds an entry to the context menu called <q>edit in Gemse</q>. So, if
you open the context menu on a <code>math</code> element and select
this new entry, it gets
opened in Gemse. There you can edit it and save it, which puts your
changes into the document and saves the document to disk. You can also
open the context menu on any other element of your document. In such a
case, all <code>math</code> elements which are contained in (i.e. are
descendants of) the said element are loaded. You can also select a
part of the document and open the context menu. In this case, all
(partially) selected math elements are loaded. If you want to activate
this feature, you have to put an additional line in your
<code>gemse.manifest</code>. You can look into the manifest file
packaged with gemse, in order to find out how it has to look like.</p>

</body>

</html>
