<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="gemse.css" type="text/css"?>

<!--
This file is part of Gemse.

Copyright 2009, 2010 Urs Holzer

Gemse is licenced under the GNU Public Licence v3 (GPL3), 
or (at your option) any later version.
-->


<window
    id="GemseWindow"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:internal="http://www.andonyar.com/rec/2008-12/gemse/internalns"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    title="Gemse"
    orient="vertical"
    onload="start()">
    <script src="const.js"/>
    <script src="UString.js"/>
    <script src="gemseBase.js"/>
    <script src="views.js"/>
    <script src="elementDescriptors.js"/>
    <script src="ucd.js"/>
    <script src="editMode.js"/>
    <script src="editMode_commandTable.js"/>
    <script src="attributeMode.js"/>
    <script src="attributeMode_commandTable.js"/>
    <script src="trivialInsertMode.js"/>
    <script src="trivialInsertMode_commandTable.js"/>
    <script src="ucdInsertMode.js"/>
    <script src="ucdInsertMode_commandTable.js"/>
    <script src="contentInsertMode.js"/>
    <script src="contentInsertMode_commandTable.js"/>
    <script src="visualSelectionMode.js"/>
    <script src="visualSelectionMode_commandTable.js"/>
    <script src="operatorDictionary.js"/>
    <script src="inputSubstitution/core.js"/>
    <script src="globalOptions.js"/>
    <script><![CDATA[
        var editor;

        function start() {
            editor = new GemsePEditor();
            editor.inputElement.focus();

            // Give the window a name:
            window.name = "globalGemseInstance";

            // Load MathML elements provided by arguments
            // (But check first the type of the argument, since it
            // seems that windows for XUL documents receive some
            // arguments ...)
            if (window.arguments && window.arguments.length > 0 && window.arguments[0] && window.arguments[0].forEach) {
                window.arguments[0].forEach(function (m) {
                    editor.loadFromOpenDocument(m.doc, m.element);
                });
            }

            // If there are no equations up to now, create a new one
            if (editor.equations.length==0) {
                editor.newEquation();
            }
        }

        /* Event processing */
        // The curent event processing is completely broken. Perhaps I
        // should use XUL right away to clean up the mess?

        function processKey(event) {
            editor.keyEvent(event);
        }

        function processInput() {
            editor.inputEvent();
        }

    ]]></script>

<vbox id="viewsetDock" flex="1" style="max-height: 100%; overflow: auto">


</vbox>

<textbox id="input" multiline="true" onkeypress="processKey(event)" oninput="processInput()"/>

<internal:viewsets>
    <!-- 0 -->
    <internal:viewset>
        <!-- Shows everything. The eqution is shown using DirectView
             This view is the best for day-to-day use. It might be a
             bit slow. -->
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <html:div internal:function="viewport" internal:viewClass="DirectView"/>
                    <html:div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <html:div internal:function="viewport" internal:viewClass="SourceView"/>
                        <html:div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <html:div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <box flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 1 -->
    <internal:viewset>
        <vbox flex="1">
            <html:div internal:function="viewport" internal:viewClass="DirectView"/>
            <html:div internal:function="viewport" internal:viewClass="TreeView"/>
            <hbox>
                <html:div internal:function="viewport" internal:viewClass="AttributeView"/>
                <html:div internal:function="viewport" internal:viewClass="DictionaryView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <box flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 2 -->
    <internal:viewset>
        <!-- Viewset for screenshots in tutorial -->
        <vbox flex="1">
            <html:div internal:function="viewport" internal:viewClass="DirectView"/>
            <html:div internal:function="viewport" internal:viewClass="TreeView"/>
        </vbox>
    </internal:viewset>
    <!-- 3 -->
    <internal:viewset>
        <!-- Bigger viewset for screenshots in tutorial -->
        <vbox flex="1">
            <html:div internal:function="viewport" internal:viewClass="DirectView"/>
            <html:div internal:function="viewport" internal:viewClass="TreeView"/>
            <hbox>
                <html:div internal:function="viewport" internal:viewClass="AttributeView"/>
                <html:div internal:function="viewport" internal:viewClass="DictionaryView"/>
            </hbox>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 4 -->
    <internal:viewset>
        <!-- Shows everything. Uses EquationView to show the equation.
             This might be useful when dealing with Content MathML. It
             might be slow. -->
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <html:div internal:function="viewport" internal:viewClass="EquationView"/>
                    <html:div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <html:div internal:function="viewport" internal:viewClass="SourceView"/>
                        <html:div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <html:div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <box flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 5 -->
    <internal:viewset>
        <!-- Shows everything. Uses NTNView to show the equation.
             This might be useful when dealing with Content MathML. It
             is slow. -->
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <html:div internal:function="viewport" internal:viewClass="NTNView"/>
                    <html:div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <html:div internal:function="viewport" internal:viewClass="SourceView"/>
                        <html:div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <html:div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <box flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
</internal:viewsets>

<math id="equationTemplate" xmlns="http://www.w3.org/1998/Math/MathML" display="block">
<mrow></mrow> 
</math>

</window>
