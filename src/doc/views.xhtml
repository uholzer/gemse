<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html [
  <!ENTITY  enter  "↵">
  <!ENTITY  esc    "ESC">
  <!ENTITY  ctrl   "CRTL+">
  <!ENTITY  alt    "ALT+">
  <!ENTITY  space  "␣">
]>


<html
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:internal="http://www.andonyar.com/rec/2008-12/gemse/internalns"
    internal:function="documentation"
    xml:lang="en"
>

<head>
    <title>Gemse 1 Documentation: Views</title>
    <link rel="stylesheet" href="../gemse.css" type="text/css" />
</head>

<body>

<h1 id="viewsets">Viewsets</h1>

<p>A viewset describes which views should be placed where in the
window.</p>

<h2 id="chooseviewset">Choosing the viewset</h2>

<p>Which viewset is used for an equation is defined by the two options
<code>viewset</code> and <code>defaultViewset</code>. If viewset is
not set at all or is set to <code>auto</code>, then the option
<code>defaultViewset</code> is used to find out which viewset should
be used. Because options can also be set locally to an equaiton, it is
possible to choose a certain viewset for only one equaiton. You can
either set these options directly, or use the 
<a href="editMode.xhtml#chooseViewset">dedicated
command</a> for choosing viewsets from the editMode.</p>

<h2 id="viewsetdescriptions">Describing a viewset with XML</h2>

<p>A viewset is described using XML. Currently, the viewset
descriptions are only to be found in <code>editor.xul</code>
itself.</p>

<h2 id="viewsetconf">The viewset configuration window</h2>

<p>While Gemse is running, there is a userfriendly way to edit
viewsets. Changes made like this are however lost when Gemse is
closed.</p>

<p>The edit mode provides a 
<a href="editMode.xhtml#viewsetconfWindow">command to
open the configuraiton window</a>. You can keep it open during your
Gemse session. It allows you to remove and add views to a viewset. In
order to place the views, you can also insert XUL box elements.
Attributes of all elements and options of views can be set as
well.</p>

<p>First of all, note that every change you make takes effect
immediately. Keep in mind that the changes also take effect for all
other equations using the same viewset. If you don't want that, you
first have to save the viewset under anoter name and <em>then</em>
make the changes.</p>

<p>On the top of the configuration window you see an input box which
allows you to change the name of the viewset and one which allows you
to change its description. Below, you see a preview of the viewset
using boxes. Every box represents an element of the viewset
description. You can click on a box to select it. Below the preview
you have a list of all attributes and options of the currently
selected element of the viewset. Open the context menu on this list if
you want delete or add an entry. Below the list, you find buttons
which allow you to insert a view, a box before, after or into the
selected element or remove the selected element. At the bottom you can
save a copy of the current viewset under a new name, load another
viewset. The last button at the very bottom allows you to use this
viewset for all equations (except for the ones that are locally
configured to use a certain viewset).</p>

<h1 id="listofviews">Available Views</h1>

<h2 id="DirectView">DirectView</h2>

<p>Just shows the equation using Mozilla's rendering engine. This
works excellent for Presentation MathML. However, Mozilla's rendering
engine does not show Content MathML and OpenMath.</p>

<h2 id="MessageView">MessageView</h2>

<p>Shows errors, warnings and other messages</p>

<h2 id="TreeView">TreeView</h2>

<p>Uses nested boxes to depict the tree structore of the equation's
XML code.</p>

<h2 id="SourceView">SourceView</h2>

<p>Shows the XML source code of the current equation. The cursor is
shown here as well. The appearance can be configured in various ways.
(Note, not a real serializer is used, therefore the output of this view might
not be usable as XML document directly.)</p>

<p>Options:</p>

<dl>
    <dt><code>SourceView.foldingDepth</code></dt>
    <dd>Only show elements to this depth, relative to
    the element where the view starts. The special value <code>-1</code> causes
    the source view to show all elements from the starting point to
    the leaves.</dd>

    <dt><code>SourceView.foldingStart</code></dt>
    <dd>When set to <code>0</code>, the source view starts at the
    element under the cursor. That is, it only shows this element and
    its descendants (how deep is defined by
    <code>SourceView.foldingDepth</code>). 
    If set to <code>-n</code>, it starts at the n-th
    ancestor of the element under the cursor. If set to
    <code>1</code>, the view starts at the root element of the
    equation.</dd>

    <dt><code>SourceView.foldingKeepIndentation</code></dt>
    <dd>When activated, prevents that the indentation level of an
    element changes when the topmost displayed element of the source
    view changes.</dd>

    <dt><code>SourceView.indentation</code></dt>
    <dd>The SourceView puts this string at the beginning of every line
    as many times as the level of indentation. A typical value would
    two or four spaces.</dd>

    <dt><code>SourceView.showAttributes</code></dt>
    <dd>Controls wheter attributes are shown.</dd>

    <dt><code>SourceView.syntaxHighlighting</code></dt>
    <dd>Activates special styling of the syntax. The
    styling itself is controlled in the CSS file
    <code>gemse.css</code>.</dd>
</dl>

<h2 id="EquaitonView">EquationView</h2>

<p>A more advanced version of the DirectView. It also shows
Content MathML in a non-rendered form.</p>

<h2 id="AttributeView">AttributeView</h2>

<p>Shows the attributes of the current element.</p>

<h2 id="DictionaryView">DictionaryView</h2>

<p>Shows information from the opterator dictionary for a MathML
<code>mo</code> element.</p>

<h2 id="OthersView">OthersView</h2>

<p>Shows a list of the other loaded equations.</p>

<h2 id="StatsbarView">StatusbarView</h2>

<p>Shows a status bar indicating the current mode and other
things.</p>

</body>

</html>
