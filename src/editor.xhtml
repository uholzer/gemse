<?xml version="1.0"?>
<?xml-stylesheet href="gemse.css" type="text/css"?>

<!DOCTYPE html>
<html
    id="GemseWindow"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:internal="http://www.andonyar.com/rec/2008-12/gemse/internalns"
    title="Gemse">
    <head>
        <script><![CDATA[
            var editor;

            window.start = function () {
                // Instead of using a top-level module with attribute
                // `type="module"` on the script tag and an import statement
                // like
                //   import { GemsePEditor } from "./gemseBase.js";
                // We import the module dynamically. This is because
                // Chrome does not support script elements with
                // `type="module"` in XHTML.
                // https://issues.chromium.org/issues/40518469
                import("./gemseBase.js").then(function (module) {
                    editor = new module.GemsePEditor(window.editorsetup);
                });
            }
            window.editorsetup = function (editor) {
                editor.inputElement.focus();

                // Give the window a name:
                window.name = "globalGemseInstance";

                // Locate callback function provided by the first argument
                // (But check first the type of the argument, since it
                // seems that windows for XUL documents receive some
                // arguments ...)
                var onready;
                if (window.arguments && window.arguments.length > 0 && window.arguments[0]) {
                    var arg = window.arguments[0];
                    // If the argument has been passed by using the
                    // wrappedJSObject-trick, unwrap it
                    if (arg.wrappedJSObject) {
                        arg = arg.wrappedJSObject;
                    }
                    onready = arg.onready;
                }

                // Execute onReady callback
                if (onready) { onready(editor) }

                // If there are no equations up to now, create a new one
                if (editor.equations.length==0) {
                    editor.newEquation();
                }

                // If there is already stuff in the input buffer (for
                // example placed by one of the above callback functions),
                // run it.
                if (editor.inputBuffer) { editor.inputEvent() }
            }

            /* Event processing */
            // The curent event processing is completely broken. Perhaps I
            // should use XUL right away to clean up the mess?

            window.processKey = function (event) {
                editor.keyEvent(event);
            }

            window.processInput = function () {
                editor.inputEvent();
            }

        ]]></script>
    </head>
    <body onload="start()">

<vbox id="viewsetDock" flex="1" style="max-height: 100%; overflow: auto">


</vbox>

<textarea id="input" onkeydown="processKey(event)" oninput="processInput()"/>

<!--
    When clicking the file input element (click event via JavaScript or actual
    clicking by a user), a file picker dialog is shown. The contents of the
    chosen file can then be retrieved by the JavaScript code via the DOM.
    As soon as available, it would make sense to switch to the file system
    access API:
    https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
-->
<input id="filepicker" type="file"/>

<internal:viewsets>
    <!-- 0 -->
    <internal:viewset 
        name="presentation"
        description="all views for presentation markup">
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <div internal:function="viewport" internal:viewClass="DirectView"/>
                    <div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <div internal:function="viewport" internal:viewClass="SourceView"/>
                        <div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <vbox flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 1 -->
    <internal:viewset
        name="light"
        description="lightweight viewset for presentation markup">
        <vbox flex="1">
            <div internal:function="viewport" internal:viewClass="DirectView"/>
            <div internal:function="viewport" internal:viewClass="TreeView"/>
            <hbox>
                <div internal:function="viewport" internal:viewClass="AttributeView"/>
                <div internal:function="viewport" internal:viewClass="DictionaryView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <vbox flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 2 -->
    <internal:viewset
        name="screenshot"
        description="used to create the screenshots for the tutorial">
        <vbox flex="1">
            <div internal:function="viewport" internal:viewClass="DirectView"/>
            <div internal:function="viewport" internal:viewClass="TreeView"/>
        </vbox>
    </internal:viewset>
    <!-- 3 -->
    <internal:viewset
        name="screenshot+"
        description="used to create screenshots showing some additional views">
        <vbox flex="1">
            <div internal:function="viewport" internal:viewClass="DirectView"/>
            <div internal:function="viewport" internal:viewClass="TreeView"/>
            <hbox>
                <div internal:function="viewport" internal:viewClass="AttributeView"/>
                <div internal:function="viewport" internal:viewClass="DictionaryView"/>
            </hbox>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 4 -->
    <internal:viewset
        name="use_EquationView"
        description="uses EquationView instead of DirectView">
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <div internal:function="viewport" internal:viewClass="EquationView"/>
                    <div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <div internal:function="viewport" internal:viewClass="SourceView"/>
                        <div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <vbox flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 5 -->
    <internal:viewset
        name="content"
        description="for editing Content MathML, includes a live rendering provided by JOMDoc">
        <vbox flex="1">
            <hbox>
                <vbox flex="1">
                    <div internal:function="viewport" internal:viewClass="NTNView"/>
                    <div internal:function="viewport" internal:viewClass="TreeView"/>
                    <hbox>
                        <div internal:function="viewport" internal:viewClass="SourceView"/>
                        <div internal:function="viewport" internal:viewClass="AttributeView"/>
                        <div internal:function="viewport" internal:viewClass="DictionaryView"/>
                    </hbox>
                </vbox>
                <vbox internal:function="viewport" internal:viewClass="OthersView"/>
            </hbox>
            <!--<spacer flex="1"/>-->
            <vbox flex="1" style="overflow: auto;" internal:function="viewport" internal:viewClass="MessageView"/>
            <hbox internal:function="viewport" internal:viewClass="StatusbarView"/>
        </vbox>
    </internal:viewset>
    <!-- 6 -->
    <internal:viewset
        name="screenshot-content"
        description="used to create the screenshots for the tutorial">
        <vbox flex="1">
            <div internal:function="viewport" internal:viewClass="NTNView"/>
            <div internal:function="viewport" internal:viewClass="TreeView"/>
            <div internal:function="viewport" internal:viewClass="SourceView"/>
        </vbox>
    </internal:viewset>
</internal:viewsets>

<math id="equationTemplate" xmlns="http://www.w3.org/1998/Math/MathML" display="block">
<mrow></mrow> 
</math>

    </body>
</html>
